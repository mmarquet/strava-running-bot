name: SonarCloud Code Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests with coverage
        run: npm test
        
      - name: Verify coverage report
        run: |
          echo "Checking coverage report generation..."
          if [ ! -f "coverage/lcov.info" ]; then
            echo "❌ Error: coverage/lcov.info not found"
            exit 1
          fi
          
          # Check if coverage file has actual data (not empty)
          if [ ! -s "coverage/lcov.info" ]; then
            echo "❌ Error: coverage/lcov.info is empty"
            exit 1
          fi
          
          # Show coverage summary for debugging
          echo "✅ Coverage report generated successfully"
          echo "Coverage file size: $(wc -c < coverage/lcov.info) bytes"
          echo "Number of source files: $(grep -c '^SF:' coverage/lcov.info || echo 0)"
          
          # Show Jest coverage summary if available
          if npm test -- --coverage --silent 2>/dev/null | grep -E "Statements|Branches|Functions|Lines"; then
            echo "Coverage summary from Jest:"
            npm test -- --coverage --silent 2>&1 | grep -E "Statements|Branches|Functions|Lines" || echo "Could not extract coverage summary"
          fi
        
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
